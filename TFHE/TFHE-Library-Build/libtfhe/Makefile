# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.10

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/zak/Code/FYP-EncryptedLedger/TFHE/tfhe-tfhe-1bedf38/src

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# The main all target
all: cmake_check_build_system
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(CMAKE_COMMAND) -E cmake_progress_start /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build/CMakeFiles /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build/libtfhe/CMakeFiles/progress.marks
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
libtfhe/CMakeFiles/tfhe-nayuki-portable.dir/rule:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/CMakeFiles/tfhe-nayuki-portable.dir/rule
.PHONY : libtfhe/CMakeFiles/tfhe-nayuki-portable.dir/rule

# Convenience name for target.
tfhe-nayuki-portable: libtfhe/CMakeFiles/tfhe-nayuki-portable.dir/rule

.PHONY : tfhe-nayuki-portable

# fast build rule for target.
tfhe-nayuki-portable/fast:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-nayuki-portable.dir/build.make libtfhe/CMakeFiles/tfhe-nayuki-portable.dir/build
.PHONY : tfhe-nayuki-portable/fast

# Convenience name for target.
libtfhe/CMakeFiles/tfhe-core.dir/rule:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/CMakeFiles/tfhe-core.dir/rule
.PHONY : libtfhe/CMakeFiles/tfhe-core.dir/rule

# Convenience name for target.
tfhe-core: libtfhe/CMakeFiles/tfhe-core.dir/rule

.PHONY : tfhe-core

# fast build rule for target.
tfhe-core/fast:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/build
.PHONY : tfhe-core/fast

# Convenience name for target.
libtfhe/CMakeFiles/tfhe-nayuki-avx.dir/rule:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/CMakeFiles/tfhe-nayuki-avx.dir/rule
.PHONY : libtfhe/CMakeFiles/tfhe-nayuki-avx.dir/rule

# Convenience name for target.
tfhe-nayuki-avx: libtfhe/CMakeFiles/tfhe-nayuki-avx.dir/rule

.PHONY : tfhe-nayuki-avx

# fast build rule for target.
tfhe-nayuki-avx/fast:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-nayuki-avx.dir/build.make libtfhe/CMakeFiles/tfhe-nayuki-avx.dir/build
.PHONY : tfhe-nayuki-avx/fast

# Convenience name for target.
libtfhe/CMakeFiles/tfhe-spqlios-avx.dir/rule:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/CMakeFiles/tfhe-spqlios-avx.dir/rule
.PHONY : libtfhe/CMakeFiles/tfhe-spqlios-avx.dir/rule

# Convenience name for target.
tfhe-spqlios-avx: libtfhe/CMakeFiles/tfhe-spqlios-avx.dir/rule

.PHONY : tfhe-spqlios-avx

# fast build rule for target.
tfhe-spqlios-avx/fast:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-spqlios-avx.dir/build.make libtfhe/CMakeFiles/tfhe-spqlios-avx.dir/build
.PHONY : tfhe-spqlios-avx/fast

# Convenience name for target.
libtfhe/CMakeFiles/tfhe-spqlios-fma.dir/rule:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f CMakeFiles/Makefile2 libtfhe/CMakeFiles/tfhe-spqlios-fma.dir/rule
.PHONY : libtfhe/CMakeFiles/tfhe-spqlios-fma.dir/rule

# Convenience name for target.
tfhe-spqlios-fma: libtfhe/CMakeFiles/tfhe-spqlios-fma.dir/rule

.PHONY : tfhe-spqlios-fma

# fast build rule for target.
tfhe-spqlios-fma/fast:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-spqlios-fma.dir/build.make libtfhe/CMakeFiles/tfhe-spqlios-fma.dir/build
.PHONY : tfhe-spqlios-fma/fast

autogenerated.o: autogenerated.cpp.o

.PHONY : autogenerated.o

# target to build an object file
autogenerated.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/autogenerated.cpp.o
.PHONY : autogenerated.cpp.o

autogenerated.i: autogenerated.cpp.i

.PHONY : autogenerated.i

# target to preprocess a source file
autogenerated.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/autogenerated.cpp.i
.PHONY : autogenerated.cpp.i

autogenerated.s: autogenerated.cpp.s

.PHONY : autogenerated.s

# target to generate assembly for a file
autogenerated.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/autogenerated.cpp.s
.PHONY : autogenerated.cpp.s

boot-gates.o: boot-gates.cpp.o

.PHONY : boot-gates.o

# target to build an object file
boot-gates.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/boot-gates.cpp.o
.PHONY : boot-gates.cpp.o

boot-gates.i: boot-gates.cpp.i

.PHONY : boot-gates.i

# target to preprocess a source file
boot-gates.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/boot-gates.cpp.i
.PHONY : boot-gates.cpp.i

boot-gates.s: boot-gates.cpp.s

.PHONY : boot-gates.s

# target to generate assembly for a file
boot-gates.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/boot-gates.cpp.s
.PHONY : boot-gates.cpp.s

lwe-bootstrapping-functions-fft.o: lwe-bootstrapping-functions-fft.cpp.o

.PHONY : lwe-bootstrapping-functions-fft.o

# target to build an object file
lwe-bootstrapping-functions-fft.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-bootstrapping-functions-fft.cpp.o
.PHONY : lwe-bootstrapping-functions-fft.cpp.o

lwe-bootstrapping-functions-fft.i: lwe-bootstrapping-functions-fft.cpp.i

.PHONY : lwe-bootstrapping-functions-fft.i

# target to preprocess a source file
lwe-bootstrapping-functions-fft.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-bootstrapping-functions-fft.cpp.i
.PHONY : lwe-bootstrapping-functions-fft.cpp.i

lwe-bootstrapping-functions-fft.s: lwe-bootstrapping-functions-fft.cpp.s

.PHONY : lwe-bootstrapping-functions-fft.s

# target to generate assembly for a file
lwe-bootstrapping-functions-fft.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-bootstrapping-functions-fft.cpp.s
.PHONY : lwe-bootstrapping-functions-fft.cpp.s

lwe-bootstrapping-functions.o: lwe-bootstrapping-functions.cpp.o

.PHONY : lwe-bootstrapping-functions.o

# target to build an object file
lwe-bootstrapping-functions.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-bootstrapping-functions.cpp.o
.PHONY : lwe-bootstrapping-functions.cpp.o

lwe-bootstrapping-functions.i: lwe-bootstrapping-functions.cpp.i

.PHONY : lwe-bootstrapping-functions.i

# target to preprocess a source file
lwe-bootstrapping-functions.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-bootstrapping-functions.cpp.i
.PHONY : lwe-bootstrapping-functions.cpp.i

lwe-bootstrapping-functions.s: lwe-bootstrapping-functions.cpp.s

.PHONY : lwe-bootstrapping-functions.s

# target to generate assembly for a file
lwe-bootstrapping-functions.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-bootstrapping-functions.cpp.s
.PHONY : lwe-bootstrapping-functions.cpp.s

lwe-functions.o: lwe-functions.cpp.o

.PHONY : lwe-functions.o

# target to build an object file
lwe-functions.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-functions.cpp.o
.PHONY : lwe-functions.cpp.o

lwe-functions.i: lwe-functions.cpp.i

.PHONY : lwe-functions.i

# target to preprocess a source file
lwe-functions.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-functions.cpp.i
.PHONY : lwe-functions.cpp.i

lwe-functions.s: lwe-functions.cpp.s

.PHONY : lwe-functions.s

# target to generate assembly for a file
lwe-functions.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-functions.cpp.s
.PHONY : lwe-functions.cpp.s

lwe-keyswitch-functions.o: lwe-keyswitch-functions.cpp.o

.PHONY : lwe-keyswitch-functions.o

# target to build an object file
lwe-keyswitch-functions.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-keyswitch-functions.cpp.o
.PHONY : lwe-keyswitch-functions.cpp.o

lwe-keyswitch-functions.i: lwe-keyswitch-functions.cpp.i

.PHONY : lwe-keyswitch-functions.i

# target to preprocess a source file
lwe-keyswitch-functions.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-keyswitch-functions.cpp.i
.PHONY : lwe-keyswitch-functions.cpp.i

lwe-keyswitch-functions.s: lwe-keyswitch-functions.cpp.s

.PHONY : lwe-keyswitch-functions.s

# target to generate assembly for a file
lwe-keyswitch-functions.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe-keyswitch-functions.cpp.s
.PHONY : lwe-keyswitch-functions.cpp.s

lwe.o: lwe.cpp.o

.PHONY : lwe.o

# target to build an object file
lwe.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe.cpp.o
.PHONY : lwe.cpp.o

lwe.i: lwe.cpp.i

.PHONY : lwe.i

# target to preprocess a source file
lwe.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe.cpp.i
.PHONY : lwe.cpp.i

lwe.s: lwe.cpp.s

.PHONY : lwe.s

# target to generate assembly for a file
lwe.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwe.cpp.s
.PHONY : lwe.cpp.s

lwebootstrappingkey.o: lwebootstrappingkey.cpp.o

.PHONY : lwebootstrappingkey.o

# target to build an object file
lwebootstrappingkey.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwebootstrappingkey.cpp.o
.PHONY : lwebootstrappingkey.cpp.o

lwebootstrappingkey.i: lwebootstrappingkey.cpp.i

.PHONY : lwebootstrappingkey.i

# target to preprocess a source file
lwebootstrappingkey.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwebootstrappingkey.cpp.i
.PHONY : lwebootstrappingkey.cpp.i

lwebootstrappingkey.s: lwebootstrappingkey.cpp.s

.PHONY : lwebootstrappingkey.s

# target to generate assembly for a file
lwebootstrappingkey.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwebootstrappingkey.cpp.s
.PHONY : lwebootstrappingkey.cpp.s

lwekey.o: lwekey.cpp.o

.PHONY : lwekey.o

# target to build an object file
lwekey.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwekey.cpp.o
.PHONY : lwekey.cpp.o

lwekey.i: lwekey.cpp.i

.PHONY : lwekey.i

# target to preprocess a source file
lwekey.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwekey.cpp.i
.PHONY : lwekey.cpp.i

lwekey.s: lwekey.cpp.s

.PHONY : lwekey.s

# target to generate assembly for a file
lwekey.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwekey.cpp.s
.PHONY : lwekey.cpp.s

lwekeyswitch.o: lwekeyswitch.cpp.o

.PHONY : lwekeyswitch.o

# target to build an object file
lwekeyswitch.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwekeyswitch.cpp.o
.PHONY : lwekeyswitch.cpp.o

lwekeyswitch.i: lwekeyswitch.cpp.i

.PHONY : lwekeyswitch.i

# target to preprocess a source file
lwekeyswitch.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwekeyswitch.cpp.i
.PHONY : lwekeyswitch.cpp.i

lwekeyswitch.s: lwekeyswitch.cpp.s

.PHONY : lwekeyswitch.s

# target to generate assembly for a file
lwekeyswitch.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwekeyswitch.cpp.s
.PHONY : lwekeyswitch.cpp.s

lweparams.o: lweparams.cpp.o

.PHONY : lweparams.o

# target to build an object file
lweparams.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lweparams.cpp.o
.PHONY : lweparams.cpp.o

lweparams.i: lweparams.cpp.i

.PHONY : lweparams.i

# target to preprocess a source file
lweparams.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lweparams.cpp.i
.PHONY : lweparams.cpp.i

lweparams.s: lweparams.cpp.s

.PHONY : lweparams.s

# target to generate assembly for a file
lweparams.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lweparams.cpp.s
.PHONY : lweparams.cpp.s

lwesamples.o: lwesamples.cpp.o

.PHONY : lwesamples.o

# target to build an object file
lwesamples.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwesamples.cpp.o
.PHONY : lwesamples.cpp.o

lwesamples.i: lwesamples.cpp.i

.PHONY : lwesamples.i

# target to preprocess a source file
lwesamples.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwesamples.cpp.i
.PHONY : lwesamples.cpp.i

lwesamples.s: lwesamples.cpp.s

.PHONY : lwesamples.s

# target to generate assembly for a file
lwesamples.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/lwesamples.cpp.s
.PHONY : lwesamples.cpp.s

multiplication.o: multiplication.cpp.o

.PHONY : multiplication.o

# target to build an object file
multiplication.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/multiplication.cpp.o
.PHONY : multiplication.cpp.o

multiplication.i: multiplication.cpp.i

.PHONY : multiplication.i

# target to preprocess a source file
multiplication.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/multiplication.cpp.i
.PHONY : multiplication.cpp.i

multiplication.s: multiplication.cpp.s

.PHONY : multiplication.s

# target to generate assembly for a file
multiplication.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/multiplication.cpp.s
.PHONY : multiplication.cpp.s

numeric-functions.o: numeric-functions.cpp.o

.PHONY : numeric-functions.o

# target to build an object file
numeric-functions.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/numeric-functions.cpp.o
.PHONY : numeric-functions.cpp.o

numeric-functions.i: numeric-functions.cpp.i

.PHONY : numeric-functions.i

# target to preprocess a source file
numeric-functions.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/numeric-functions.cpp.i
.PHONY : numeric-functions.cpp.i

numeric-functions.s: numeric-functions.cpp.s

.PHONY : numeric-functions.s

# target to generate assembly for a file
numeric-functions.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/numeric-functions.cpp.s
.PHONY : numeric-functions.cpp.s

polynomials.o: polynomials.cpp.o

.PHONY : polynomials.o

# target to build an object file
polynomials.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/polynomials.cpp.o
.PHONY : polynomials.cpp.o

polynomials.i: polynomials.cpp.i

.PHONY : polynomials.i

# target to preprocess a source file
polynomials.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/polynomials.cpp.i
.PHONY : polynomials.cpp.i

polynomials.s: polynomials.cpp.s

.PHONY : polynomials.s

# target to generate assembly for a file
polynomials.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/polynomials.cpp.s
.PHONY : polynomials.cpp.s

tfhe_garbage_collector.o: tfhe_garbage_collector.cpp.o

.PHONY : tfhe_garbage_collector.o

# target to build an object file
tfhe_garbage_collector.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_garbage_collector.cpp.o
.PHONY : tfhe_garbage_collector.cpp.o

tfhe_garbage_collector.i: tfhe_garbage_collector.cpp.i

.PHONY : tfhe_garbage_collector.i

# target to preprocess a source file
tfhe_garbage_collector.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_garbage_collector.cpp.i
.PHONY : tfhe_garbage_collector.cpp.i

tfhe_garbage_collector.s: tfhe_garbage_collector.cpp.s

.PHONY : tfhe_garbage_collector.s

# target to generate assembly for a file
tfhe_garbage_collector.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_garbage_collector.cpp.s
.PHONY : tfhe_garbage_collector.cpp.s

tfhe_gate_bootstrapping.o: tfhe_gate_bootstrapping.cpp.o

.PHONY : tfhe_gate_bootstrapping.o

# target to build an object file
tfhe_gate_bootstrapping.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_gate_bootstrapping.cpp.o
.PHONY : tfhe_gate_bootstrapping.cpp.o

tfhe_gate_bootstrapping.i: tfhe_gate_bootstrapping.cpp.i

.PHONY : tfhe_gate_bootstrapping.i

# target to preprocess a source file
tfhe_gate_bootstrapping.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_gate_bootstrapping.cpp.i
.PHONY : tfhe_gate_bootstrapping.cpp.i

tfhe_gate_bootstrapping.s: tfhe_gate_bootstrapping.cpp.s

.PHONY : tfhe_gate_bootstrapping.s

# target to generate assembly for a file
tfhe_gate_bootstrapping.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_gate_bootstrapping.cpp.s
.PHONY : tfhe_gate_bootstrapping.cpp.s

tfhe_gate_bootstrapping_structures.o: tfhe_gate_bootstrapping_structures.cpp.o

.PHONY : tfhe_gate_bootstrapping_structures.o

# target to build an object file
tfhe_gate_bootstrapping_structures.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_gate_bootstrapping_structures.cpp.o
.PHONY : tfhe_gate_bootstrapping_structures.cpp.o

tfhe_gate_bootstrapping_structures.i: tfhe_gate_bootstrapping_structures.cpp.i

.PHONY : tfhe_gate_bootstrapping_structures.i

# target to preprocess a source file
tfhe_gate_bootstrapping_structures.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_gate_bootstrapping_structures.cpp.i
.PHONY : tfhe_gate_bootstrapping_structures.cpp.i

tfhe_gate_bootstrapping_structures.s: tfhe_gate_bootstrapping_structures.cpp.s

.PHONY : tfhe_gate_bootstrapping_structures.s

# target to generate assembly for a file
tfhe_gate_bootstrapping_structures.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_gate_bootstrapping_structures.cpp.s
.PHONY : tfhe_gate_bootstrapping_structures.cpp.s

tfhe_generic_streams.o: tfhe_generic_streams.cpp.o

.PHONY : tfhe_generic_streams.o

# target to build an object file
tfhe_generic_streams.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_generic_streams.cpp.o
.PHONY : tfhe_generic_streams.cpp.o

tfhe_generic_streams.i: tfhe_generic_streams.cpp.i

.PHONY : tfhe_generic_streams.i

# target to preprocess a source file
tfhe_generic_streams.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_generic_streams.cpp.i
.PHONY : tfhe_generic_streams.cpp.i

tfhe_generic_streams.s: tfhe_generic_streams.cpp.s

.PHONY : tfhe_generic_streams.s

# target to generate assembly for a file
tfhe_generic_streams.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_generic_streams.cpp.s
.PHONY : tfhe_generic_streams.cpp.s

tfhe_io.o: tfhe_io.cpp.o

.PHONY : tfhe_io.o

# target to build an object file
tfhe_io.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_io.cpp.o
.PHONY : tfhe_io.cpp.o

tfhe_io.i: tfhe_io.cpp.i

.PHONY : tfhe_io.i

# target to preprocess a source file
tfhe_io.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_io.cpp.i
.PHONY : tfhe_io.cpp.i

tfhe_io.s: tfhe_io.cpp.s

.PHONY : tfhe_io.s

# target to generate assembly for a file
tfhe_io.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tfhe_io.cpp.s
.PHONY : tfhe_io.cpp.s

tgsw-fft-operations.o: tgsw-fft-operations.cpp.o

.PHONY : tgsw-fft-operations.o

# target to build an object file
tgsw-fft-operations.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw-fft-operations.cpp.o
.PHONY : tgsw-fft-operations.cpp.o

tgsw-fft-operations.i: tgsw-fft-operations.cpp.i

.PHONY : tgsw-fft-operations.i

# target to preprocess a source file
tgsw-fft-operations.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw-fft-operations.cpp.i
.PHONY : tgsw-fft-operations.cpp.i

tgsw-fft-operations.s: tgsw-fft-operations.cpp.s

.PHONY : tgsw-fft-operations.s

# target to generate assembly for a file
tgsw-fft-operations.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw-fft-operations.cpp.s
.PHONY : tgsw-fft-operations.cpp.s

tgsw-functions.o: tgsw-functions.cpp.o

.PHONY : tgsw-functions.o

# target to build an object file
tgsw-functions.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw-functions.cpp.o
.PHONY : tgsw-functions.cpp.o

tgsw-functions.i: tgsw-functions.cpp.i

.PHONY : tgsw-functions.i

# target to preprocess a source file
tgsw-functions.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw-functions.cpp.i
.PHONY : tgsw-functions.cpp.i

tgsw-functions.s: tgsw-functions.cpp.s

.PHONY : tgsw-functions.s

# target to generate assembly for a file
tgsw-functions.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw-functions.cpp.s
.PHONY : tgsw-functions.cpp.s

tgsw.o: tgsw.cpp.o

.PHONY : tgsw.o

# target to build an object file
tgsw.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw.cpp.o
.PHONY : tgsw.cpp.o

tgsw.i: tgsw.cpp.i

.PHONY : tgsw.i

# target to preprocess a source file
tgsw.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw.cpp.i
.PHONY : tgsw.cpp.i

tgsw.s: tgsw.cpp.s

.PHONY : tgsw.s

# target to generate assembly for a file
tgsw.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tgsw.cpp.s
.PHONY : tgsw.cpp.s

tlwe-fft-operations.o: tlwe-fft-operations.cpp.o

.PHONY : tlwe-fft-operations.o

# target to build an object file
tlwe-fft-operations.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe-fft-operations.cpp.o
.PHONY : tlwe-fft-operations.cpp.o

tlwe-fft-operations.i: tlwe-fft-operations.cpp.i

.PHONY : tlwe-fft-operations.i

# target to preprocess a source file
tlwe-fft-operations.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe-fft-operations.cpp.i
.PHONY : tlwe-fft-operations.cpp.i

tlwe-fft-operations.s: tlwe-fft-operations.cpp.s

.PHONY : tlwe-fft-operations.s

# target to generate assembly for a file
tlwe-fft-operations.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe-fft-operations.cpp.s
.PHONY : tlwe-fft-operations.cpp.s

tlwe-functions.o: tlwe-functions.cpp.o

.PHONY : tlwe-functions.o

# target to build an object file
tlwe-functions.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe-functions.cpp.o
.PHONY : tlwe-functions.cpp.o

tlwe-functions.i: tlwe-functions.cpp.i

.PHONY : tlwe-functions.i

# target to preprocess a source file
tlwe-functions.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe-functions.cpp.i
.PHONY : tlwe-functions.cpp.i

tlwe-functions.s: tlwe-functions.cpp.s

.PHONY : tlwe-functions.s

# target to generate assembly for a file
tlwe-functions.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe-functions.cpp.s
.PHONY : tlwe-functions.cpp.s

tlwe.o: tlwe.cpp.o

.PHONY : tlwe.o

# target to build an object file
tlwe.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe.cpp.o
.PHONY : tlwe.cpp.o

tlwe.i: tlwe.cpp.i

.PHONY : tlwe.i

# target to preprocess a source file
tlwe.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe.cpp.i
.PHONY : tlwe.cpp.i

tlwe.s: tlwe.cpp.s

.PHONY : tlwe.s

# target to generate assembly for a file
tlwe.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/tlwe.cpp.s
.PHONY : tlwe.cpp.s

toruspolynomial-functions.o: toruspolynomial-functions.cpp.o

.PHONY : toruspolynomial-functions.o

# target to build an object file
toruspolynomial-functions.cpp.o:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/toruspolynomial-functions.cpp.o
.PHONY : toruspolynomial-functions.cpp.o

toruspolynomial-functions.i: toruspolynomial-functions.cpp.i

.PHONY : toruspolynomial-functions.i

# target to preprocess a source file
toruspolynomial-functions.cpp.i:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/toruspolynomial-functions.cpp.i
.PHONY : toruspolynomial-functions.cpp.i

toruspolynomial-functions.s: toruspolynomial-functions.cpp.s

.PHONY : toruspolynomial-functions.s

# target to generate assembly for a file
toruspolynomial-functions.cpp.s:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(MAKE) -f libtfhe/CMakeFiles/tfhe-core.dir/build.make libtfhe/CMakeFiles/tfhe-core.dir/toruspolynomial-functions.cpp.s
.PHONY : toruspolynomial-functions.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... install/strip"
	@echo "... install"
	@echo "... rebuild_cache"
	@echo "... tfhe-nayuki-portable"
	@echo "... list_install_components"
	@echo "... tfhe-core"
	@echo "... edit_cache"
	@echo "... install/local"
	@echo "... tfhe-nayuki-avx"
	@echo "... tfhe-spqlios-avx"
	@echo "... tfhe-spqlios-fma"
	@echo "... autogenerated.o"
	@echo "... autogenerated.i"
	@echo "... autogenerated.s"
	@echo "... boot-gates.o"
	@echo "... boot-gates.i"
	@echo "... boot-gates.s"
	@echo "... lwe-bootstrapping-functions-fft.o"
	@echo "... lwe-bootstrapping-functions-fft.i"
	@echo "... lwe-bootstrapping-functions-fft.s"
	@echo "... lwe-bootstrapping-functions.o"
	@echo "... lwe-bootstrapping-functions.i"
	@echo "... lwe-bootstrapping-functions.s"
	@echo "... lwe-functions.o"
	@echo "... lwe-functions.i"
	@echo "... lwe-functions.s"
	@echo "... lwe-keyswitch-functions.o"
	@echo "... lwe-keyswitch-functions.i"
	@echo "... lwe-keyswitch-functions.s"
	@echo "... lwe.o"
	@echo "... lwe.i"
	@echo "... lwe.s"
	@echo "... lwebootstrappingkey.o"
	@echo "... lwebootstrappingkey.i"
	@echo "... lwebootstrappingkey.s"
	@echo "... lwekey.o"
	@echo "... lwekey.i"
	@echo "... lwekey.s"
	@echo "... lwekeyswitch.o"
	@echo "... lwekeyswitch.i"
	@echo "... lwekeyswitch.s"
	@echo "... lweparams.o"
	@echo "... lweparams.i"
	@echo "... lweparams.s"
	@echo "... lwesamples.o"
	@echo "... lwesamples.i"
	@echo "... lwesamples.s"
	@echo "... multiplication.o"
	@echo "... multiplication.i"
	@echo "... multiplication.s"
	@echo "... numeric-functions.o"
	@echo "... numeric-functions.i"
	@echo "... numeric-functions.s"
	@echo "... polynomials.o"
	@echo "... polynomials.i"
	@echo "... polynomials.s"
	@echo "... tfhe_garbage_collector.o"
	@echo "... tfhe_garbage_collector.i"
	@echo "... tfhe_garbage_collector.s"
	@echo "... tfhe_gate_bootstrapping.o"
	@echo "... tfhe_gate_bootstrapping.i"
	@echo "... tfhe_gate_bootstrapping.s"
	@echo "... tfhe_gate_bootstrapping_structures.o"
	@echo "... tfhe_gate_bootstrapping_structures.i"
	@echo "... tfhe_gate_bootstrapping_structures.s"
	@echo "... tfhe_generic_streams.o"
	@echo "... tfhe_generic_streams.i"
	@echo "... tfhe_generic_streams.s"
	@echo "... tfhe_io.o"
	@echo "... tfhe_io.i"
	@echo "... tfhe_io.s"
	@echo "... tgsw-fft-operations.o"
	@echo "... tgsw-fft-operations.i"
	@echo "... tgsw-fft-operations.s"
	@echo "... tgsw-functions.o"
	@echo "... tgsw-functions.i"
	@echo "... tgsw-functions.s"
	@echo "... tgsw.o"
	@echo "... tgsw.i"
	@echo "... tgsw.s"
	@echo "... tlwe-fft-operations.o"
	@echo "... tlwe-fft-operations.i"
	@echo "... tlwe-fft-operations.s"
	@echo "... tlwe-functions.o"
	@echo "... tlwe-functions.i"
	@echo "... tlwe-functions.s"
	@echo "... tlwe.o"
	@echo "... tlwe.i"
	@echo "... tlwe.s"
	@echo "... toruspolynomial-functions.o"
	@echo "... toruspolynomial-functions.i"
	@echo "... toruspolynomial-functions.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/zak/Code/FYP-EncryptedLedger/TFHE/TFHE-Library-Build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

